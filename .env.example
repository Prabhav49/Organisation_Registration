# Environment Configuration

## Required Environment Variables

### For Local Development

Create a `.env` file in your project root or set these environment variables:

```bash
# Google OAuth2 Configuration
export GOOGLE_CLIENT_ID="your-google-client-id"
export GOOGLE_CLIENT_SECRET="your-google-client-secret"

# JWT Configuration  
export JWT_SECRET="your-jwt-secret-key"
export JWT_EXPIRATION="86400"

# Frontend URL
export FRONTEND_URL="http://localhost:3000"

# Database Configuration (if using environment variables)
export DB_URL="jdbc:mysql://localhost:3306/ESDProject"
export DB_USERNAME="root"
export DB_PASSWORD="password123"
```

### Setting Up Google OAuth2

1. **Go to Google Cloud Console**: https://console.cloud.google.com/
2. **Create a new project** or select existing project
3. **Enable Google+ API**:
   - Go to APIs & Services → Library
   - Search for "Google+ API" and enable it
4. **Create OAuth2 Credentials**:
   - Go to APIs & Services → Credentials
   - Click "Create Credentials" → "OAuth 2.0 Client ID"
   - Choose "Web application"
   - Add authorized redirect URI: `http://localhost:9192/login/oauth2/code/google`
5. **Copy your Client ID and Client Secret**
6. **Set environment variables** with your actual values

### For Production

Set these environment variables in your production environment:

```bash
GOOGLE_CLIENT_ID=your-production-client-id
GOOGLE_CLIENT_SECRET=your-production-client-secret
JWT_SECRET=your-strong-jwt-secret
FRONTEND_URL=https://your-frontend-domain.com
```

### Security Notes

- ⚠️ **Never commit secrets to version control**
- ✅ Always use environment variables for sensitive data
- ✅ Use different OAuth2 credentials for development and production
- ✅ Regenerate secrets if accidentally exposed

### Running the Application

```bash
# Set environment variables
export GOOGLE_CLIENT_ID="your-client-id"
export GOOGLE_CLIENT_SECRET="your-client-secret"

# Run the application
./mvnw spring-boot:run
```

Or use a `.env` file with a tool like `direnv` or `dotenv`.
